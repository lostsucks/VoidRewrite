# dupe/toggle/blacklist/ripm

# ripm new

command ripm <text>:
    permission: ripm
    trigger:
        if arg-1 = "add":
            add player's tool to {RIPM::*}
            send "&7Added &e%player's tool% &7to the RIPM."
        else if arg-1 = "remove":
            remove player's tool from {RIPM::*}
            send "&7Removed &e%player's tool% &7from the RIPM."
        else if arg-1 = "fullReset":
            delete {RIPM::*}
            send "&7RIPM has been &efully &7reset."
        else if arg-1 = "reset":
            set {RIPM::*} to all items
            send "&7RIPM has been &ereset."

on tab complete of "ripm":
    set tab completions for position 1 to "add", "remove", "fullReset" and "reset"

# toggle

options:
    toggle: 20

on join:
    {-toggle::%uuid of player%} is not set
    set {-toggle::%uuid of player%} to true

command toggle:
    aliases: t
    trigger:
        if {-toggle::%uuid of player%} is true:
            set {-toggle::%uuid of player%} to false
            send action bar with prefix "&7Toggled &cOFF&7."
        else:
            set {-toggle::%uuid of player%} to true
            send action bar with prefix "&7Toggled &aON&7."

every {@toggle} seconds:
    if {-toggle::%uuid of player%} is true:
        loop all players:
            give loop-player random element out of {RIPM::*}
            play sound "entity.experience_orb.pickup" to loop-player  

on load:
    if {RIPM::*} is not set:
        set {RIPM::*} to all items

command timeskip:
    cooldown: 5 minutes
    trigger:
        give player 1 of random element out of {RIPM::*}
        play sound "entity.experience_orb.pickup" to player

# blacklist

command blacklist <text>:
    permission: blacklist
    trigger:
        if arg-1 = "add":
            add type of player's tool to {blacklist::*}
            send "&7Added &e%player's tool% &7to the blacklist."
        else if arg-1 = "remove":
            remove type of player's tool from {blacklist::*}
            send "&7Removed &e%player's tool% &7from the blacklist."
        else if arg-1 = "reset":
            delete {blacklist::*}
            send "&7Blacklist has been &efully &7reset."

on tab complete of "blacklist":
    set tab completions for position 1 to "add", "remove" and "reset"

# dupe

command dupe:
    trigger:
        if player's tool is air:
            send action bar "&cYou must be holding an item to dupe it."
            play sound "entity.villager.no" to player
            stop

        if {blacklist::*} contains player's tool:
            send action bar "&cYou can't dupe this item."
            play sound "entity.villager.no" to player
            stop

        if player's tool is any shulker box:
            set {_nbt::*} to compound list tag "tag;BlockEntityTag;Items" of full nbt compound of player's tool
            loop item from nbt {_nbt::*}:
                set {_item} to loop-value
                if {blacklist::*} contains type of {_item}:
                    send action bar "&cYou can't dupe this item."
                    play sound "entity.villager.no" to player
                    stop

        set {_item} to player's tool
        set {_amount} to amount of {_item} in player's inventory if player has permission "rewrite.dupeInv"
        set {_amount} to item amount of {_item} if player does not have permission "rewrite.dupeInv"

        give player {_amount} of {_item}
        play sound "block.note_block.pling" to player
        add 1 to {globalDupes}

